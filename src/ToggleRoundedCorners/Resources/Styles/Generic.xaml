<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml">
    
    <!-- Font Family Resource -->
    <FontFamily x:Key="FontIcon">Segoe Fluent Icons, Segoe MDL2 Assets</FontFamily>

    <!-- Borderless Window Style -->
    <Style x:Key="BorderlessWindow" TargetType="Border">
        <Setter Property="BorderThickness" Value="1" />
        <Setter Property="BorderBrush" Value="{DynamicResource BorderColor}" />
        <Style.Triggers>
            <DataTrigger Binding="{Binding WindowState, RelativeSource={RelativeSource AncestorType=Window}}"
                         Value="Normal">
                <Setter Property="Margin" Value="0" />
            </DataTrigger>
            <DataTrigger Binding="{Binding WindowState, RelativeSource={RelativeSource AncestorType=Window}}"
                         Value="Maximized">
                <Setter Property="Margin" Value="8,8,0,0" />
            </DataTrigger>
        </Style.Triggers>
    </Style>

    <!-- Window Style -->
    <Style x:Key="WindowStyle" TargetType="Window">
        <Setter Property="Icon" Value="../appicon.ico" />
        <Setter Property="WindowStyle" Value="None" />
        <Setter Property="AllowsTransparency" Value="True" />
        <Setter Property="SnapsToDevicePixels" Value="True" />
        <Setter Property="Background" Value="{DynamicResource WindowBackgroundColor}" />
        <Setter Property="Foreground" Value="{DynamicResource WindowForegroundColor}" />

        <Setter Property="WindowChrome.WindowChrome">
            <Setter.Value>
                <WindowChrome GlassFrameThickness="0" CaptionHeight="30" CornerRadius="0" ResizeBorderThickness="4" />
            </Setter.Value>
        </Setter>
    </Style>
    
    <!-- Caption Button Style -->
    <Style x:Key="CaptionButton" TargetType="Button">
        <Setter Property="Padding" Value="15,10" />
        <Setter Property="Background" Value="Transparent" />
        <Setter Property="Foreground" Value="{DynamicResource WindowForegroundColor}" />
        <Setter Property="FontSize" Value="10" />
        <Setter Property="FontFamily" Value="{StaticResource FontIcon}" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="Button">
                    <Border x:Name="Border" BorderThickness="0" BorderBrush="{TemplateBinding BorderBrush}">
                        <TextBlock HorizontalAlignment="Center" VerticalAlignment="Center"
                                   Padding="{TemplateBinding Padding}" Text="{TemplateBinding Content}" />
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter TargetName="Border" Property="Background"
                                    Value="{DynamicResource HoverBackgroundColor}" />
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="False">
                            <Setter Property="Foreground" Value="Gray" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    
    <Style x:Key="OptionButton" TargetType="Button" BasedOn="{StaticResource CaptionButton}">
        <Setter Property="MinWidth" Value="200"/>
        <Setter Property="MinHeight" Value="45"/>
        <Setter Property="FontSize" Value="16"/>
        <Setter Property="Margin" Value="0,0,0,5"/>
        <Setter Property="FontFamily" Value="Segoe UI" />
        <Setter Property="Padding" Value="15,0" />
        <Setter Property="BorderBrush" Value="{DynamicResource SeparatorColor}"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="Button">
                    <Border x:Name="Border" BorderThickness="1" BorderBrush="{TemplateBinding BorderBrush}" Background="{DynamicResource BorderColor}">
                        <TextBlock HorizontalAlignment="Center" VerticalAlignment="Center"
                                   Padding="{TemplateBinding Padding}" Text="{TemplateBinding Content}" />
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter TargetName="Border" Property="Background"
                                    Value="{DynamicResource HoverBackgroundColor}" />
                            
                            <!-- <Setter TargetName="Border" Property="CornerRadius" Value="14"/> -->
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="False">
                            <Setter Property="Foreground" Value="Gray" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    
    <Style x:Key="ToggleOptionButton" TargetType="ToggleButton">
        <Setter Property="MinWidth" Value="200"/>
        <Setter Property="MinHeight" Value="45"/>
        <Setter Property="FontSize" Value="16"/>
        <Setter Property="Margin" Value="0,0,0,5"/>
        <Setter Property="FontFamily" Value="Segoe UI" />
        <Setter Property="Padding" Value="15,0" />
        <Setter Property="Background" Value="Transparent" />
        <Setter Property="Foreground" Value="{DynamicResource WindowForegroundColor}" />
        <Setter Property="BorderBrush" Value="{DynamicResource SeparatorColor}" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="ToggleButton">
                    <Border x:Name="Border" BorderThickness="1" BorderBrush="{TemplateBinding BorderBrush}" Background="{DynamicResource BorderColor}">
                        <TextBlock HorizontalAlignment="Center" VerticalAlignment="Center"
                                   Padding="{TemplateBinding Padding}" Text="{TemplateBinding Content}" />
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter TargetName="Border" Property="Background"
                                    Value="{DynamicResource HoverBackgroundColor}" />
                        </Trigger>
                        <Trigger Property="IsChecked" Value="True">
                            <Setter TargetName="Border" Property="BorderBrush" Value="{DynamicResource WindowForegroundColor}"/>
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="False">
                            <Setter Property="Foreground" Value="Gray" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
        
    <Style x:Key="TransparentItemContainer" TargetType="ListBoxItem">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="ListBoxItem">
                    <Border Background="{TemplateBinding Background}">
                        <ContentPresenter />
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    
</ResourceDictionary>